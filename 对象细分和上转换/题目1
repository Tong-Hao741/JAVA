1）父类Employee:有一个方法earnings();
（2）三个子类YearWorker、MonthWorker、WeekWorker:即公司里有三类不同领薪水方式的员工，在子类中重写earnings()方法，分别返回一年的年薪（200000元），月薪（8000元）*12，周薪（3000元）*52，月薪和周薪可以自己固定写一个值来表示；
（3）公司类Company：用Employee类的对象数组employee作为成员变量；构造函数（参数是Employee的对象数组，把对象数组的引用赋值给成员变量）；计算总薪水salariesPay（），调用对象数组employ里的所有对象的earnings()，求和计算出所有员工的总的薪水；
（4）主类中先定义公司的员工数组，一共有30名员工，Employee的对象数组可以是YearWorker、MonthWorker、WeekWorker的上转型对象，给员工分成三大类分别是拿年薪和月薪、周薪的员工（比如说前10个是年薪，中间10个是月薪，后10个是周薪），然后把30名员工的数组赋给公司company,最终把company的薪水总额输出。
//父类
public abstract class Emplyee {
	abstract double earnings();
}
//年薪子类
class YearWorker extends Emplyee{
	double earnings(){
		return 200000;
	}
}
//月薪子类
class MonthWorker extends Emplyee{
	double earnings(){
		return 8000*12;
	}
}
//周薪子类
class WeekWorker extends Emplyee{
	double earnings(){
		return 3000*52;
	}
}
//公司类
class Company{
	Emplyee emplyee[] = new Emplyee[30];
	public Company(Emplyee emplyee[]) {
		// TODO Auto-generated constructor stub
		this.emplyee = emplyee;
	}

	
	
	double salariesPay(){
		double sum = 0;
		for(int i = 0;i<30;i++){
			sum+=emplyee[i].earnings();
		}
		return sum;
	}
}
=========================================================================
//测试类
public class Test {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Emplyee H[] = new Emplyee[30];
		Emplyee A[] = new YearWorker[10];
		Emplyee B[] = new MonthWorker[10];
		Emplyee C[] = new WeekWorker[10];
		int j = 0;
		for(int i = 0;i<10;i++){
			A[i]=new YearWorker();
			H[j] = A[i];j++;
			B[i]=new MonthWorker();
			H[j] = B[i];j++;
			C[i]=new WeekWorker();
			H[j] = C[i];j++;
		}
		Company HUAWEI = new Company(H);
		System.out.println(HUAWEI.salariesPay());
	}

}
